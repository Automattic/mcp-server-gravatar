/* tslint:disable */
/* eslint-disable */
/**
 * Gravatar Public API
 * Gravatar\'s public API endpoints
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * The subset of data available for update. Field names match the ones in `Profile`. Only the provided fields will be updated.
 * @export
 * @interface UpdateProfileRequest
 */
export interface UpdateProfileRequest {
    /**
     * The user's display name. This is the name that is displayed on their profile.
     * @type {string}
     * @memberof UpdateProfileRequest
     */
    displayName?: string;
    /**
     * The about section on a user's profile.
     * @type {string}
     * @memberof UpdateProfileRequest
     */
    description?: string;
    /**
     * The phonetic pronunciation of the user's name.
     * @type {string}
     * @memberof UpdateProfileRequest
     */
    pronunciation?: string;
    /**
     * The pronouns the user uses.
     * @type {string}
     * @memberof UpdateProfileRequest
     */
    pronouns?: string;
    /**
     * The user's location.
     * @type {string}
     * @memberof UpdateProfileRequest
     */
    location?: string;
    /**
     * The user's job title.
     * @type {string}
     * @memberof UpdateProfileRequest
     */
    jobTitle?: string;
    /**
     * The user's current company's name.
     * @type {string}
     * @memberof UpdateProfileRequest
     */
    company?: string;
}

/**
 * Check if a given object implements the UpdateProfileRequest interface.
 */
export function instanceOfUpdateProfileRequest(value: object): value is UpdateProfileRequest {
    return true;
}

export function UpdateProfileRequestFromJSON(json: any): UpdateProfileRequest {
    return UpdateProfileRequestFromJSONTyped(json, false);
}

export function UpdateProfileRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateProfileRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'displayName': json['display_name'] == null ? undefined : json['display_name'],
        'description': json['description'] == null ? undefined : json['description'],
        'pronunciation': json['pronunciation'] == null ? undefined : json['pronunciation'],
        'pronouns': json['pronouns'] == null ? undefined : json['pronouns'],
        'location': json['location'] == null ? undefined : json['location'],
        'jobTitle': json['job_title'] == null ? undefined : json['job_title'],
        'company': json['company'] == null ? undefined : json['company'],
    };
}

export function UpdateProfileRequestToJSON(json: any): UpdateProfileRequest {
    return UpdateProfileRequestToJSONTyped(json, false);
}

export function UpdateProfileRequestToJSONTyped(value?: UpdateProfileRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'display_name': value['displayName'],
        'description': value['description'],
        'pronunciation': value['pronunciation'],
        'pronouns': value['pronouns'],
        'location': value['location'],
        'job_title': value['jobTitle'],
        'company': value['company'],
    };
}

